affinity: {}

image:
  repository: docker.io/gomods/athens
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podPriorityClassName: ""

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

config: {}
  # ATHENS_AZURE_ACCOUNT_KEY:
  # ATHENS_AZURE_ACCOUNT_NAME:
  # ATHENS_AZURE_CONTAINER_NAME:
  # ATHENS_CLOUD_RUNTIME:
  # ATHENS_DOWNLOAD_MODE:
  # ATHENS_DOWNLOAD_URL:
  # ATHENS_ETCD_ENDPOINTS:
  # ATHENS_EXTERNAL_STORAGE_URL:
  # ATHENS_FILTER_FILE:
  # ATHENS_GITHUB_TOKEN:
  # ATHENS_GLOBAL_ENDPOINT:
  # ATHENS_GO_BINARY_ENV_VARS:
  # ATHENS_GOGET_DIR:
  # ATHENS_GOGET_WORKERS:
  # ATHENS_GONOSUM_PATTERNS:
  # ATHENS_HGRC_PATH:
  # ATHENS_INDEX_MYSQL_DATABASE:
  # ATHENS_INDEX_MYSQL_HOST:
  # ATHENS_INDEX_MYSQL_PARAMS:
  # ATHENS_INDEX_MYSQL_PASSWORD:
  # ATHENS_INDEX_MYSQL_PORT:
  # ATHENS_INDEX_MYSQL_PROTOCOL:
  # ATHENS_INDEX_MYSQL_USER:
  # ATHENS_INDEX_POSTGRES_DATABASE:
  # ATHENS_INDEX_POSTGRES_HOST:
  # ATHENS_INDEX_POSTGRES_PARAMS:
  # ATHENS_INDEX_POSTGRES_PASSWORD:
  # ATHENS_INDEX_POSTGRES_PORT:
  # ATHENS_INDEX_POSTGRES_USER:
  # ATHENS_INDEX_TYPE:
  # ATHENS_LOG_LEVEL:
  # ATHENS_MINIO_ACCESS_KEY_ID:
  # ATHENS_MINIO_BUCKET_NAME:
  # ATHENS_MINIO_ENDPOINT:
  # ATHENS_MINIO_REGION:
  # ATHENS_MINIO_SECRET_ACCESS_KEY:
  # ATHENS_MINIO_USE_SSL:
  # ATHENS_MONGO_CERT_PATH:
  # ATHENS_MONGO_DEFAULT_DATABASE:
  # ATHENS_MONGO_INSECURE:
  # ATHENS_MONGO_STORAGE_URL:
  # ATHENS_NETRC_PATH:
  # ATHENS_PATH_PREFIX:
  # ATHENS_PORT:
  # ATHENS_PROTOCOL_WORKERS:
  # ATHENS_PROXY_VALIDATOR:
  # ATHENS_REDIS_ENDPOINT:
  # ATHENS_REDIS_PASSWORD:
  # ATHENS_REDIS_SENTINEL_ENDPOINTS:
  # ATHENS_ROBOTS_FILE:
  # ATHENS_SINGLE_FLIGHT_TYPE:
  # ATHENS_STATS_EXPORTER:
  # ATHENS_STORAGE_GCP_BUCKET:
  # ATHENS_STORAGE_GCP_JSON_KEY:
  # ATHENS_STORAGE_TYPE:
  # ATHENS_SUM_DBS:
  # ATHENS_TIMEOUT:
  # ATHENS_TLSCERT_FILE:
  # ATHENS_TLSKEY_FILE:
  # ATHENS_TRACE_EXPORTER_URL:
  # ATHENS_TRACE_EXPORTER:
  # AWS_ACCESS_KEY_ID:
  # AWS_ENDPOINT:
  # AWS_FORCE_PATH_STYLE:
  # AWS_REGION:
  # AWS_SECRET_ACCESS_KEY:
  # AWS_SESSION_TOKEN:
  # BASIC_AUTH_PASS:
  # BASIC_AUTH_USER:
  # CDN_ENDPOINT:
  # GO_BINARY_PATH:
  # GO_ENV:
  # GOOGLE_CLOUD_PROJECT:
  # MY_S3_BUCKET_NAME:
  # PROXY_FORCE_SSL:

livenessProbe:
  httpGet:
    scheme: HTTP
    path: /healthz
    port: http

replicaCount: 1

serviceAccount:
  annotations: {}

service:
  annotations: {}
  # externalIPs: []
  # externalTrafficPolicy: "Cluster"
  # loadBalancerClass: ""
  # loadBalancerIP: ""
  # loadBalancerSourceRanges: []
  # internalTrafficPolicy: "Cluster"
  name: http
  targetPort: 3000
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # cert-manager.io/issuer:
    # kubernetes.io/tls-acme: "true"
  hosts:
  - host: "your-hostname"
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls:
  - secretName: "your-tls-secret"
    hosts:
    - "your-hostname"

readinessProbe:
  httpGet:
    scheme: HTTP
    path: /healthz
    port: http

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector:
  kubernetes.io/arch: amd64

tolerations: []

# extra volumes for the pod
extraVolumes: {}
# The following example mount the same secret, which contains tls certificates
# under different names. Each volume mount contains only selected items of the
# secret. This make it easier to place the items on different locations inside the
# container filesystem via extraVolumeMounts.
# - name: custom-ca-anchor
#   secret:
#     secretName: athens-proxy-custom-tls-certificates
#     items:
#     - key: ca.crt
#       path: ca.crt
#       mode: 0444
# - name: custom-tls-certificates
#   secret:
#     secretName: athens-proxy-custom-tls-certificates
#     items:
#     - key: tls.key
#       path: tls.key
#       mode: 0400
#     - key: tls.crt
#       path: tls.crt
#       mode: 0444

extraVolumeMounts: {}
# The following example follows the example of extraVolumes and mounts the
# volumes to the corresponding paths in the container filesystem.
# - name: custom-ca-anchor
#   mountPath: /usr/local/share/ca-certificates
# - name: custom-tls-certificates
#   mountPath: /etc/athens-proxy/tls
